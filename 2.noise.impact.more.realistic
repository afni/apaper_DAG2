# biased estimation of correlation in the presence of noise;
# correlation simulated between two regions with time series of 300 time point
require(MASS)
sim <- function(nt=300, rr=NULL) {
    dd    <- mvrnorm(n=nt, mu=rep(0,4), Sigma=V)
    bold1 <- dd[,1]+dd[,3]; bold2 <- dd[,2]+dd[,4]
    rr    <- c(rr, cor(bold1, bold2))
}

res <- NULL
for(rN in seq(0, 0.8, 0.4)) for(rE in c(0, 0.4)) for(rC in c(0, 0.4)) 
for(Rv in c(0.1,0.2,0.3,0.4,0.5,0.75,1,1.5,2,2.5,3)) {  # Rv - standard deviation ratio
    V <- matrix(c(1, rN, rC, rC,
                 rN, 1, rC, rC,
                 rC, rC, 1, rE,
                 rC, rC, rE, 1), ncol=4, nrow=4)
    V <- diag(c(1,1,Rv,Rv)) %*% V %*% diag(c(1,1,Rv,Rv))
  res <- rbind(res, data.frame(rN=rN, rE=rE, rC=rC, Rv=Rv, r=replicate(500, sim(nt=300, rr=NULL))))
}

# result plotting
require(ggplot2)
dd    <- aggregate(r~rN+rE+rC+Rv, res, mean)
dd$se <- aggregate(r~rN+rE+rC+Rv, res, sd)[,'r']
dd$rhoP <- dd$rN; dd$rN <- as.factor(dd$rN); ddR$rE <- as.factor(dd$rE)
levels(dd$rN) <- c(parse(text = paste("rho~'='~0")), parse(text = paste("rho~'='~0.4")), parse(text = paste("rho~'='~0.8")))
levels(dd$rE) <- c(expression(r["e"]~'='~0), expression(r["e"]~'='~0.4))
dev.new(width=6, height=4)
ggplot(dd[dd$rC==0,], aes(x=Rv, y=r)) + theme_bw() +
  geom_errorbar(aes(ymin=r-2*se, ymax=r+2*se, col='red'), width=.1) +
  geom_point(size=1.5, shape=21, fill="white", col='red') + geom_hline(aes(yintercept = rhoP, col='blue')) +
  stat_smooth(aes(x = Rv, y = r), method = "gam", se = FALSE, color='cyan') +
  scale_color_manual(values = c('blue', 'red'), labels=c(parse(text = paste("assumed: rho")), expression(paste('estimated: r*'))) ) +
  facet_grid(rE~rN, scales = "fixed", labeller = label_parsed) +
  scale_y_continuous(breaks = seq(0,0.8,0.2), labels = seq(0,0.8,0.2)) +
  labs(x=expression('relative amount of noise: Rv'), y=expression(paste('estimated BOLD correlation: r*'))) + guides(linetype = "none") +
  theme(legend.position = c(.175,.85), legend.text=element_text(size=12), legend.title=element_blank(),
     axis.text=element_text(size=12), strip.text.x = element_text(size = 12),
     axis.title=element_text(size=14), strip.text = element_text(size = 12),
     panel.border = element_blank(),
     panel.background = element_blank())

dev.new(width=6, height=4)
ggplot(dd[dd$rC==0.4,], aes(x=Rv, y=r)) + theme_bw() +
  geom_errorbar(aes(ymin=r-2*se, ymax=r+2*se, col='red'), width=.1) +
  geom_point(size=1.5, shape=21, fill="white", col='red') + geom_hline(aes(yintercept = rhoP, col='blue')) +
  stat_smooth(aes(x = Rv, y = r), method = "gam", se = FALSE, color='cyan') +
  scale_color_manual(values = c('blue', 'red'), labels=c(parse(text = paste("assumed: rho")), expression(paste('estimated: r*'))) ) +
  facet_grid(rE~rN, scales = "fixed", labeller = label_parsed) +
  scale_y_continuous(breaks = seq(0,0.8,0.2), labels = seq(0,0.8,0.2)) +
  labs(x=expression('relative amount of noise: Rv'), y=expression(paste('estimated BOLD correlation: r*'))) + guides(linetype = "none") +
  theme(legend.position = c(.175,.85), legend.text=element_text(size=12), legend.title=element_blank(),
     axis.text=element_text(size=12), strip.text.x = element_text(size = 12),
     axis.title=element_text(size=14), strip.text = element_text(size = 12),
     panel.border = element_blank(),
     panel.background = element_blank())
